version: "3"

services:
  haproxy:
    image: bitnami/haproxy:2
    volumes:
      - ./haproxy.cfg:/bitnami/haproxy/conf/haproxy.cfg:ro
    ports:
      - "8080:8080"
    depends_on:
      - pos1
      - pos2
      - pos3
      - pos4

  mysql:
    image: bitnami/mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"
    volumes:
      - "./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql"

  mongo:
    image: bitnami/mongodb:5.0
    ports:
      - "27017:27017"
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"

  redis1:
    image: bitnami/redis-cluster:6.2
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"
      - "REDIS_CLUSTER_REPLICAS=1"
      - "REDIS_NODES=redis1 redis2 redis3 redis4 redis5 redis6"
  redis2:
    image: bitnami/redis-cluster:6.2
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"
      - "REDIS_CLUSTER_REPLICAS=1"
      - "REDIS_NODES=redis1 redis2 redis3 redis4 redis5 redis6"
  redis3:
    image: bitnami/redis-cluster:6.2
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"
      - "REDIS_CLUSTER_REPLICAS=1"
      - "REDIS_NODES=redis1 redis2 redis3 redis4 redis5 redis6"
  redis4:
    image: bitnami/redis-cluster:6.2
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"
      - "REDIS_CLUSTER_REPLICAS=1"
      - "REDIS_NODES=redis1 redis2 redis3 redis4 redis5 redis6"
  redis5:
    image: bitnami/redis-cluster:6.2
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"
      - "REDIS_CLUSTER_REPLICAS=1"
      - "REDIS_NODES=redis1 redis2 redis3 redis4 redis5 redis6"
  redis6:
    image: bitnami/redis-cluster:6.2
    environment:
      - "ALLOW_EMPTY_PASSWORD=yes"
      - "REDIS_CLUSTER_REPLICAS=1"
      - "REDIS_NODES=redis1 redis2 redis3 redis4 redis5 redis6"
      - "REDIS_CLUSTER_CREATOR=yes"
      - "REDIS_CLUSTER_SLEEP_BEFORE_DNS_LOOKUP=15"
    ports:
      - "6379:6379"
    depends_on:
      - redis1
      - redis2
      - redis3
      - redis4
      - redis5

  pos1:
    image: pos
    build:
      context: ./
    cpu_count: 1
    command: ["--spring.batch.job.names=importProducts"]
    ports:
      - "8081:8080"
    environment:
      - "IMPORT_AMAZON_META_DATA=true"
    volumes:
      - "./data:/data"
  pos2:
    image: pos
    cpu_count: 1
    ports:
      - "8082:8080"
    volumes:
      - "./data:/data"
  pos3:
    image: pos
    cpu_count: 1
    ports:
      - "8083:8080"
    volumes:
      - "./data:/data"
  pos4:
    image: pos
    cpu_count: 1
    ports:
      - "8084:8080"
    volumes:
      - "./data:/data"
